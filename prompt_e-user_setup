# Created by icetrey <trey@imagin.net>
# Added by Spidey 08/06
# Converted to zsh prompt theme by <adam@spiers.net>
# adam2 bastard hack by e-user <e-user@gmx.net>

# $Id: prompt_e-user_setup 202 2009-02-20 17:30:23Z e-user $
# $HeadURL: https://exergonic.org/repos/sys/e-user/trunk/.zsh.d/functions/prompt_e-user_setup $

prompt_e-user_help () {
  cat <<EOH
This prompt is color-scheme-able.  You can invoke it thus:

  prompt e-user [<text-color> [<parentheses-color>]]

The default colors are both cyan.  This theme works best with a dark
background.
EOH
}

prompt_e-user_setup () {
  local text_col=${1:-'cyan'}
  local parens_col=${2:-$text_col}

  prompt_text="%{$fg_no_bold[$text_col]%}"
  prompt_parens="%{$fg_bold[$parens_col]%}"
  prompt_punct="%{$fg_bold[grey]%}"
  prompt_reset="%{$reset_color%}"
  prompt_lpar="$prompt_parens($prompt_text"
  prompt_rpar="$prompt_parens)$prompt_text"

  prompt_line_1a="$prompt_punct$prompt_text$prompt_lpar%n$prompt_punct@$prompt_text%m$prompt_rpar$prompt_lpar%!$prompt_punct/$prompt_text%y$prompt_rpar$prompt_lpar%D{%F}${prompt_punct}T$prompt_text%D{%T}$prompt_rpar$prompt_punct-$prompt_reset"
  prompt_line_2="$prompt_punct$prompt_text$prompt_lpar%#$prompt_punct:$prompt_text%~$prompt_rpar$prompt_punct-$prompt_reset "
  PS2="$prompt_parens$prompt_text$prompt_punct-$prompt_reset "

  precmd () { prompt_e-user_precmd; setopt promptsubst }
  preexec () { }
}

prompt_e-user_precmd () {
  setopt noxtrace localoptions extendedglob

  local shlvl="lvl:%L"
  local load="load:$(cat /proc/loadavg|cut -f1 -d' ')"

  prompt_line_1b="$prompt_punct$prompt_text$prompt_lpar$shlvl$prompt_rpar$prompt_lpar$load$prompt_rpar$prompt_punct-$prompt_reset"

  prompt_e-user_choose_prompt

  PS1="$prompt_line_1$prompt_newline$prompt_line_2"

  case $TERM in
    xterm*)
      print -Pn "\e]0;%n@%m:%~ (%l)\a"
      ;;
  esac
}


prompt_e-user_choose_prompt () {
  local prompt_line_1a_width=${#${(S%%)prompt_line_1a//\%\{*\%\}}}
  local prompt_line_1b_width=${#${(S%%)prompt_line_1b//\%\{*\%\}}}

  local prompt_padding_size=$(( COLUMNS
                                  - prompt_line_1a_width
                                  - prompt_line_1b_width ))

  local prompt_gfx_hyphen="-"

  # Try to fit in long path and user@host.
  if (( prompt_padding_size > 0 )); then
    local prompt_padding
    eval "prompt_padding=\${(l:${prompt_padding_size}::${prompt_gfx_hyphen}:)_empty_zz}"
    prompt_line_1="$prompt_line_1a$prompt_punct$prompt_padding$prompt_reset$prompt_line_1b"
    return
  fi

  prompt_padding_size=$(( COLUMNS - prompt_line_1a_width ))

  # Didn't fit; try to fit in just long path.
  if (( prompt_padding_size > 0 )); then
    local prompt_padding
    eval "prompt_padding=\${(l:${prompt_padding_size}::${prompt_gfx_hyphen}:)_empty_zz}"
    prompt_line_1="$prompt_line_1a$prompt_punct$prompt_padding$prompt_reset"
    return
  fi
}


prompt_e-user_preview () {
  local color colors
  colors=(red yellow green blue magenta)

  if (( ! $#* )); then
    for (( i = 1; i <= $#colors; i++ )); do
      color=$colors[$i]
      prompt_preview_theme e-user $color
      (( i < $#colors )) && print
    done
  else
    prompt_preview_theme e-user "$@"
  fi
}

prompt_e-user_setup "$@"
